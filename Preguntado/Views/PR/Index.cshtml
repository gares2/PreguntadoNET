@model  Preguntado.Models.ViewModel.RP.FiltroRPViewModel
@{
    ViewBag.Title = "Listado de Preguntas y Respuestas";
}


<div class="page-layout carded full-width single-scroll">

    <div class="top-bg bg-deep-purple-100 "></div>

    <!-- CONTENT -->
    <div class="page-content-wrapper">

        <!-- HEADER -->
        <div class="page-header light-fg row no-gutters align-items-center justify-content-between">
            <!-- APP TITLE -->
            <div class="col-12 col-sm">
                <div class="logo row no-gutters justify-content-center align-items-start justify-content-sm-start">
                    <div class="logo-text">
                        <div class="h4">Listado de Preguntas y Respuestas</div>
                    </div>
                </div>
            </div>
            <!-- SEARCH -->
            <div class="col search-wrapper px-2">

                <div class="input-group">
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-icon">
                            <i class="icon icon-magnify"></i>
                        </button>
                    </span>
                    <input id="cliente-search-input" type="text" class="form-control" placeholder="Buscar" aria-label="Search" />
                </div>


                <!-- / SEARCH -->

            </div>
            <!-- / APP TITLE -->
            <div class="col-auto">
                <a href="/PR/Create" class="btn btn-light">NUEVO Pregunta</a>
            </div>

        </div>
        <!-- / HEADER -->

        <div class="page-content-card p-10">
            @if (User.IsInRole("Administrador") == true)
            {
                <div class="form-row mt-2">
                    <div class="col-md-6 form-group">
                        <input id="Nombre" name="Nombre" class="form-control" type="text" value="" />
                        <label for="Name" class="col-form-label">Nombre</label>
                    </div>
                    <div class="col-md-6 form-group" style="z-index:1">
                        @*<label for="Name" class="col-form-label">Categoria</label>*@
                        <select  class="chosen-select"   id="CategoriaSeleccionado" name="CategoriaSeleccionado">
                            <option value="@Guid.Empty">Seleccionar Categoria</option>
                            
                            @foreach (var categoria in Model.CategoriaDisponibles)
                            {
                                <option @(categoria.Id == Model.CategoriaSeleccionado ? "selected" : "") value="@categoria.Id"> @categoria.Nombre</option>
                            }
                        </select>
                        @*<div class="invalid-feedback">
                                @Html.ValidationMessageFor(m => m.FechaNacimiento, "", new { @class = "text-danger" })
                            </div>*@
                    </div>
                </div>
                            <div class="form-row mt-2 justify-content-center" style="text-align:center;width:100%">
                                <button class="btn btn-primary" id="btnFiltrar">Filtrar</button>
                            </div>
            }
            <table id="cliente-data-table" class="table">
                <thead>
                    <tr>
                        <th class="secondary-text">
                            <div class="table-header">
                                <span class="column-title">Pregunta</span>
                            </div>
                        </th>                     
                        <th class="secondary-text">
                            <div class="table-header">
                                <span class="column-title">Categoria</span>
                            </div>
                        </th>
                        <th class="secondary-text">
                            <div class="table-header">
                                <span class="column-title">Respuestas</span>
                            </div>
                        </th>
                        <th class="secondary-text">
                            <div class="table-header">
                                <span class="column-title">Resp.valida</span>
                            </div>
                        </th>
                        <th class="secondary-text">
                            <div class="table-header">
                                <span class="column-title">Acciones</span>
                            </div>
                        </th>

                    </tr>
                </thead>

                <tfoot>
                    <tr>
                        <th class="secondary-text">
                            <div class="table-header">
                                <span class="column-title">Pregunta</span>
                            </div>
                        </th>
                        <th class="secondary-text">
                            <div class="table-header">
                                <span class="column-title">Categoria</span>
                            </div>
                        </th>
                        <th class="secondary-text">
                            <div class="table-header">
                                <span class="column-title">Respuestas</span>
                            </div>
                        </th>
                        <th class="secondary-text">
                            <div class="table-header">
                                <span class="column-title">Resp.valida</span>
                            </div>
                        </th>
                        
                        <th class="secondary-text">
                            <div class="table-header">
                                <span class="column-title">Acciones</span>
                            </div>
                        </th>

                    </tr>
                </tfoot>
            </table>



        </div>

    </div>
</div>



@section Scripts {
    <link href="~/assets/DataTables-1.10.15/media/css/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="~/assets/DataTables-1.10.15/media/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {

         $("#btnFiltrar").click(function () {
             var nombre = $("#Nombre").val();
             var Categoriaeleccionado = $("#CategoriaSeleccionado").children("option:selected").val();
             table.ajax.url('@Url.Action("GetData", "PR")' + '?nombre=' + nombre + '&CategoriaSeleccionado=' + Categoriaeleccionado).load();
            });

            function RefrescarClicksDelete() {
                $('.btnEliminar').off();
                $('.btnEliminar').on('click', function () {
                    var id = $(this).attr('id');
                    swal({
                        title: "¿Está seguro de que desea eliminar este registro?",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "Sí",
                        cancelButtonText: "No",
                        closeOnConfirm: false
                    }, function () {

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("Delete", "PR")',
                            dataType: 'json',
                            data: { Id: id }
                            ,
                            success: function (result) {
                                swal("¡Eliminado!", "El registro fue eliminada.", "success");
                                table.ajax.reload();
                            },
                            error: function (error) {
                                swal("¡Error!", "El registro no fue eliminada.", "error");
                            }
                        });
                    });
                });
            }

            var table = $('#cliente-data-table').DataTable({
                language: {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "searching": false,
                "processing": true,
                "serverSide": true,
                "ajax": '@Url.Action("GetData", "PR")',
                "columns": [
                    {
                        "data": "Pregunta",
                        "searchable": true,
                        "orderable":true
                    },
                    {
                        "data": "Categoria",
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        "searchable": false,
                        "orderable": false,
                        "mRender": function (data, type, row) {
                            var button = ' <td> <ul>';
                            for (j = 0; j < row.respuestas.length; j++) {
                                button += '<li>' + (row.respuestas[j].Nombre) + '</li> '
                            }
                            button += ' </ul> </td>'
                            return button;
                        }
                    },
                    {
                        "data": "correctas",
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        "searchable": false,
                        "orderable": false,
                        "mRender": function (data, type, row) {
                            var urlEdit = '@Url.Action("Edit", "PR")' + '/';
                            var button = '<a class="btn btn-default" href="' + (urlEdit + row.Id) + '">Editar</a><button class="btn btn-danger btnEliminar" id="' + row.Id + '">Eliminar</button>'
                            return button;
                        }
                    }
                ],
                "drawCallback": function (settings, json) {
                    console.log('draw!');
                    RefrescarClicksDelete();
                }

            });

            })
    </script>

}